<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprperson</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad = 4;
keyblack= false;
keycopper=false;
keygold=false;
keymagic=false;
keysilver=false;
llaveplateada = 0;
llave_roja = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movimiento del jugador

//paraderecha
if(keyboard_check(vk_left))
{
if(!place_meeting(x-velocidad,y,obj_wall))&amp;&amp;(!place_meeting(x-velocidad,y,objetopadre_puertas))
{x = x - velocidad;}
}
//para izquierda
if(keyboard_check(vk_right))
{
if(!place_meeting(x+velocidad,y,obj_wall))&amp;&amp; (!place_meeting(x+velocidad,y,objetopadre_puertas))
{x = x + velocidad;}
}
//para arriva
if(keyboard_check(vk_up))
{
if(!place_meeting(x,y-velocidad,obj_wall))&amp;&amp;(!place_meeting(x,y-velocidad,objetopadre_puertas))
{y = y - velocidad;}
}
//para abajo
if(keyboard_check(vk_down))
 {
if(!place_meeting(x,y+velocidad,obj_wall))&amp;&amp;(!place_meeting(x,y+velocidad,objetopadre_puertas))
  { y=y+ velocidad;}
  }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gestion de llaves
/*se utilizara place_meeting para verificar la colision con alguna llave luego se destruye 
la llave y se pone a true la variable inicial respectiva*/

//llave negra

if (place_meeting(x,y,obj_keyblack))
   {
    with(obj_keyblack){instance_destroy();}
    keyblack=true;
     audio_play_sound(snd_push,10,false);
   }
//lave roja
if(place_meeting(x,y,obj_keycopper))
    {
     with(obj_keycopper){instance_destroy();}    
     keycopper=true;
     audio_play_sound(snd_push,10,false);
    }
//llave morada
if(place_meeting(x,y,obj_keymagic))
    {
     with(obj_keymagic){instance_destroy();}
     keymagic=true;
     audio_play_sound(snd_push,10,false);
    }

//llave oro
 if (place_meeting(x,y,obj_keygold))
    {
     with(obj_keygold){instance_destroy();}
     keygold=true;
     audio_play_sound(snd_push,10,false);
    }
//llave silver
if(place_meeting(x,y,obj_keysilver))
    {
     with(obj_keysilver){instance_destroy();}
     keysilver=true;
     audio_play_sound(snd_push,10,false);
    }

//llave plateada
if(place_meeting(x,y,objl_lave_plateada))
    {
     var asd = instance_place(x,y,objl_lave_plateada)
    with(asd)
           {
           instance_destroy()
          
           }
            llaveplateada = llaveplateada + 1;
            audio_play_sound(snd_push,10,false);
    }
//llave roja
if(place_meeting(x,y,obj_llave_roja))
    {
     var asd = instance_place(x,y,obj_llave_roja)
    with(asd)
           {
           instance_destroy()
          
           }
            llave_roja = llave_roja + 1;
            audio_play_sound(snd_push,10,false);
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gestion de puertas
//en forma similar alas llaves se verifica el estado de la variable respectiva de la llave ,la colisiony luego destruye la puerta izi

//puerta de cobre
if(keycopper)
{
if(place_meeting(x+velocidad,y,obj_puerta_roja))||
(place_meeting(x-velocidad,y,obj_puerta_roja))||
(place_meeting(x,y+velocidad,obj_puerta_roja))||
(place_meeting(x,y-velocidad,obj_puerta_roja))
       {
       with(obj_puerta_roja){instance_destroy();}
       audio_play_sound(snddoor,10,false);
       } 
}
       
       
//puerta dorada

if(keygold)
{
if(place_meeting(x+velocidad,y,obj_puertadorada))||
(place_meeting(x-velocidad,y,obj_puertadorada))||
(place_meeting(x,y+velocidad,obj_puertadorada))||
(place_meeting(x,y-velocidad,obj_puertadorada))
       {
       with(obj_puertadorada){instance_destroy();}
       audio_play_sound(snddoor,10,false);
       } 
}
//puertamagica morada

if(keymagic)
{
if(place_meeting(x+velocidad,y,obj_puertamorada))||
(place_meeting(x-velocidad,y,obj_puertamorada))||
(place_meeting(x,y+velocidad,obj_puertamorada))||
(place_meeting(x,y-velocidad,obj_puertamorada))
       {
       with(obj_puertamorada){instance_destroy();}
       audio_play_sound(snddoor,10,false);
       } 
}
//puerta silver

if(keysilver)
{
if(place_meeting(x+velocidad,y,obj_puertasilver))||
(place_meeting(x-velocidad,y,obj_puertasilver))||
(place_meeting(x,y+velocidad,obj_puertasilver))||
(place_meeting(x,y-velocidad,obj_puertasilver))
       {
       with(obj_puertasilver){instance_destroy();}
       audio_play_sound(snddoor,10,false);
       } 
}
       
//puerta negra

if(keyblack)
{
if(place_meeting(x+velocidad,y,obj_puerta_negra))||
(place_meeting(x-velocidad,y,obj_puerta_negra))||
(place_meeting(x,y+velocidad,obj_puerta_negra))||
(place_meeting(x,y-velocidad,obj_puerta_negra))
       {
       with(obj_puerta_negra){instance_destroy();}
       audio_play_sound(snddoor,10,false);
       } 
}

//pueta roja
if(llave_roja == 2)&amp;&amp;(llaveplateada == 3)
{
 if(place_meeting(x+velocidad,y,objdoor))||
(place_meeting(x-velocidad,y,objdoor))||
(place_meeting(x,y+velocidad,objdoor))||
(place_meeting(x,y-velocidad,objdoor))
   {
   with(objdoor){instance_destroy();}
   audio_play_sound(snddoor,10,false);
   }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_goal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_goal,10,false);
if(room_exists(room_next(room)))
{room_goto_next();}
else
{room_goto(inicio);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemigo_padre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
audio_play_sound(snd_dead,10,false);
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
